<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title></title>
        <description>漫漫人生,记录点滴技术,始于2013</description>
        <link>http://www.luzexi.com</link>
        <atom:link href="http://www.luzexi.com/assets/feed.xml" rel="self" type="application/rss+xml" />
        
            <item>
               <title>股市底部探索逻辑分析</title>
               <description>&lt;h1&gt;股市底部探索逻辑分析&lt;/h1&gt;

&lt;p&gt;前面探讨了 &lt;a href=&quot;http://www.luzexi.com/%E9%87%91%E8%9E%8D/2018/06/22/%E8%82%A1%E5%B8%82%E7%9A%84%E5%BA%95%E9%83%A8%E7%A9%B6%E7%AB%9F%E6%98%AF%E6%80%8E%E6%A0%B7%E5%BD%A2%E6%88%90%E7%9A%84.html&quot;&gt;《股市的底部究竟是怎样形成的》&lt;/a&gt; 分析了股市是由人性决定的，是由人创造的，所以会因为人而辉煌，并且也会因为人而毁坏。&lt;/p&gt;

&lt;p&gt;面对不确定的持续性的下跌，我们应该如何面对的呢？&lt;/p&gt;

&lt;p&gt;===&lt;/p&gt;

&lt;p&gt;首先，我们是避不开下跌的，所以的上升都会引起同样的下跌。只要你在股市里，就必须面对下跌。&lt;/p&gt;

&lt;p&gt;其次，下跌也分好几种。有从高位摔下来的，有从中继平台继续下探的，有再创历史新低的。三种情况都不一样，高位摔下来肯定不能玩，中继平台下跌的可以看看，新低的要研究其基本面。&lt;/p&gt;

&lt;p&gt;那么要怎么样判断股票在下跌过程中时可以买入的呢？&lt;/p&gt;

&lt;p&gt;一。基本面扎实。 是最最重要的一点，也是所有买入的必要条件。所谓买好股做好人就是这个道理。只有买好的公司的股票才真正赚钱。投资股票要像投资实业那样脚踏实地才能真正赚到钱。否则所谓的炒作，最终都会将自己带入坟墓。&lt;/p&gt;

&lt;p&gt;那么什么叫基本面扎实？&lt;/p&gt;

&lt;p&gt;首先，营收要稳定增长，毛利率要稳定，&lt;/p&gt;

&lt;p&gt;其次，债务不能太多否则营收利润都会被债务吃掉，&lt;/p&gt;

&lt;p&gt;然后，管理层人员，特别是CEO要有能力，善于学习，积极学习，深耕本行业。而不是为了抄高股价而来。&lt;/p&gt;

&lt;p&gt;最后，研发能力强，研发经费占比要大，这能说明公司比较重视科研，那些以运营为目的公司是走不长的。&lt;/p&gt;

&lt;p&gt;另外市值大小其实并不能说明其爆发力和持续能力的多少，小企业也同样能爆发大力量，大企业也会因为不善的经营管理策略而衰败。&lt;/p&gt;

&lt;p&gt;二。行业未来前途光明。如果行业未来的不确定性过大，就无法支撑当前的基本面的持续增长。也将导致股票价格的不确定性波动。一个在未来无法确定的东西，那跟赌博是没有区别的。所以我们一定要选，行业在未来的潜力大却持续性很好的来做。&lt;/p&gt;

&lt;p&gt;三。被低估。如果不是被低估的股票，是能难有好的收益的，即使他是高成长高发展的股票，也有到头的时候，如果不是被低估，注定要做很大的过山车。&lt;/p&gt;

&lt;p&gt;其实在牛市里，我们很难找到被低估的股票，基本上所有的股票都是被高估的，因为在牛市里大家的风险意识下降，只要有点前景的股票都会被买到很高的价格。&lt;/p&gt;

&lt;p&gt;而在牛熊中间，有很多诱骗人的价格，因为是从高处下来的股价，所以会认为捡到便宜货，而其实并不便宜，因为价格是相对的，看见过高的，就认为现在时便宜的。殊不知，在未来的熊市中，会有比这低一倍的价格出现。&lt;/p&gt;

&lt;p&gt;真正便宜的价格是在熊市中出现的。为什么这么说呢？因为只有在熊市中，人们的风险意识才是最高的，这个时候，很多利好甚至重大利好消息，都会被忽略，导致价格与实际基本面完全背离。&lt;/p&gt;

&lt;p&gt;在熊市中，有两种风险，一种是底部还有底，二是破产。熊市中的风险就是人们的恐慌，所以底部下还有底部，因为人们不相信一切未来，只在乎当下的亏损。而破产很大一部分原因就是因为大家的谨慎导致资金面紧缺，最后可能由于债务或者资金链导致无法继续经营下去而破产。只有那种基本面扎实的，一心扑在行业里深耕拓展的企业才能最终活下来。也只有脚踏实地的企业，能在熊市中崛起。&lt;/p&gt;

&lt;p&gt;从另外一个角度看，熊市是一个很好的布局机会。因为只有熊市才会让好企业的价格完全低于它企业本身的价值，在未来爆发的过程中，能得到很好的投资收益。&lt;/p&gt;

&lt;p&gt;记住，价格不会因为有人买而见底，只会因为没人卖而见底。同样，价格也不会因为有人卖而见顶，只会因为没人买而见顶。股市，房市，都是一样的道理，因为交易是由人性构成的。&lt;/p&gt;

&lt;p&gt;在持续下跌的熊市中，我们需要很好的耐心，来等待底部的形成，也需要很好的资金控制，逐步买入好的企业的股票。这也是我提倡的，无线现金流打法，按月持续买入底部好企业，并深入研究企业的运营状况，以及行业的发展方向。&lt;/p&gt;
</description>
               <pubDate>Mon, 02 Jul 2018 00:00:00 +0800</pubDate>
               <link>http://www.luzexi.com//%E9%87%91%E8%9E%8D/2018/07/02/%E8%82%A1%E5%B8%82%E5%BA%95%E9%83%A8%E6%8E%A2%E7%B4%A2%E9%80%BB%E8%BE%91%E5%88%86%E6%9E%90.html</link>
               <guid isPermaLink="true">http://www.luzexi.com//%E9%87%91%E8%9E%8D/2018/07/02/%E8%82%A1%E5%B8%82%E5%BA%95%E9%83%A8%E6%8E%A2%E7%B4%A2%E9%80%BB%E8%BE%91%E5%88%86%E6%9E%90.html</guid>
            </item>
        
            <item>
               <title>Vi和Vim常用命令集</title>
               <description>&lt;h1&gt;Vi和Vim常用命令集&lt;/h1&gt;

&lt;p&gt;vi,vim命令是种神奇的存在，他似乎提高了编辑的效率但门槛又变的太高导致不能流行在程序员中。看起来有些复杂的vi命令编辑，在一些人眼里感觉很厉害，其实都是通过成千上百次的练习掌握的技巧。本文我就来试图分解这些命令块，让大家在练习时，能更加有针对性更加有序有逻辑。&lt;/p&gt;

&lt;h2&gt;入门命令之简单编辑&lt;/h2&gt;

&lt;h5&gt;1.光标移动&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;    ←↓↑→                h,j,k,l
    到下一行的第一个字符  +
    到上一行的第一个字符  -
    到单词的结尾          e或E(忽略符号，只识别空格，回车)
    往后一个单词          w或W(跟符号和空格和回车挂钩)
    往前一个单词          b或B(跟符号和空格和回车挂钩)
    到一行的结尾          $
    到一行的开头          0(零)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;===&lt;/p&gt;

&lt;h5&gt;2.文本编辑操作&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;    在光标位置插入文本         i
    在一行的开头插入文本      I(大写I)
    在光标所在位置附加文本       a
    在一行的最后附加文本      A(大写A)
    在光标下一行打开新行      o
    在光标上一行打开新行      O(大写O)
    删除一行并替换文本         S(大写S)
    用新文本覆盖现有的文本       R(大写R)
    合并当前这一行与下一行       J(大写J)
    切换当前字符的大小写      ~
    重复上一个动作           .
    撤销上一个动作           u
    将一整行恢复到原来的      U(大写U)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;3.对缓冲区的操作&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;    粘贴内容                    p或P
    保存文件                    w
    保存并退出             wq
    强制退出不保存           q!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;4.组合命令&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;    更改一个单词      cw
    删除一个单词      dw
    赋值一个单词      yw
    更改一整行     cc
    删除一整行     dd
    复制一整行     yy
    更改到行尾     c$或C
    删除到行尾     d$或D
    复制到行尾     y$
    更改到行头     c0
    删除到行头     d0
    复制到行头     y0
    更改一个字     I
    删除一个字     x或X
    复制一个字     y1或yh
    更改5个字           5s
    删除5个字           5x
    复制5个字           5yl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    if (/(iPhone|iPad|iPod|iOS|Android)/i.test(navigator.userAgent))
    { //移动端
        var cpro_id = &quot;u3471606&quot;;
        document.write(&quot;\&lt;script type=\&quot;text/javascript\&quot; src=\&quot;http://cpro.baidustatic.com/cpro/ui/cm.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
    else
    {
        /*700*200信息流*/
        var cpro_id = &quot;u3469788&quot;;
        document.write(&quot;\&lt;script type=\&quot;text\/javascript\&quot; src=\&quot;\/\/cpro.baidustatic.com\/cpro\/ui\/c.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
&lt;/script&gt; --&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
    /*700*200信息流*/
    var cpro_id = &quot;u3469788&quot;;
&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;//cpro.baidustatic.com/cpro/ui/c.js&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    /*文内嵌入*/
    var cpro_id = &quot;u3471606&quot;;
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://cpro.baidustatic.com/cpro/ui/cm.js&quot;&gt;&lt;/script&gt; --&gt;

&lt;h2&gt;高级进阶之光标快速移动&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;h5&gt;快速翻屏&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;往后滚动一整屏       ctrl + f
往前滚动一整屏       ctrl + b
往后半屏                ctrl + d
往前半屏                ctrl + u
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;h5&gt;同屏移动&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;移动到屏幕顶端       H
移动到屏幕中间       M
移动到屏幕底部       L
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;h5&gt;段落移动&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;移动到当前段落开头     {
移动到下一段开头        }
移动到这一节开头        [[
移动到下一节开头        ]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;h5&gt;搜索模式移动&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;往后搜索某个字符串     /搜索的字符串
往前搜索某个字符串     ?搜索的字符串
往同一个方向重复搜索  n
往反方向重复搜索        N
往后重复搜索          /
往前重复搜索          ?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;h5&gt;直接跳转到某个位置&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;跳转至第n行            nG
跳转至文件末尾       ``
显示当前的行号       ctrl + g
光标往后n行            nj
光标往前n行            nk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;h5&gt;做标记(只在一个文件内有效)&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;将当前位置标记成x字符     mx
将光标移动到第一个标记x      &amp;#39;x(单引号)
将光标移动到以x标记的字符   `x(反引号)
回到上一个标记位置         ``(两个反引号)
回到上一个标记开头         &amp;#39;&amp;#39;(两个单引号)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    if (/(iPhone|iPad|iPod|iOS|Android)/i.test(navigator.userAgent))
    { //移动端
        var cpro_id = &quot;u3471606&quot;;
        document.write(&quot;\&lt;script type=\&quot;text/javascript\&quot; src=\&quot;http://cpro.baidustatic.com/cpro/ui/cm.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
    else
    {
        /*700*200信息流*/
        var cpro_id = &quot;u3469788&quot;;
        document.write(&quot;\&lt;script type=\&quot;text\/javascript\&quot; src=\&quot;\/\/cpro.baidustatic.com\/cpro\/ui\/c.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
&lt;/script&gt; --&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
    /*700*200信息流*/
    var cpro_id = &quot;u3469788&quot;;
&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;//cpro.baidustatic.com/cpro/ui/c.js&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    /*文内嵌入*/
    var cpro_id = &quot;u3471606&quot;;
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://cpro.baidustatic.com/cpro/ui/cm.js&quot;&gt;&lt;/script&gt; --&gt;

&lt;h2&gt;高级进阶之搜索与替换&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;h5&gt;搜索与替换的基本命令&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;s/old/new       搜索替换当前行，第一个找到的
s/old/new/g     搜索替换当前行，所有找到的
g/old/new/g     搜索替换当前文件中，所有找到的内容
g/old/new/gc    搜索替换当前文件中，所有找到的内容，并且做yes or no 的替换确认

g/pattern/s/old/new/gc 先搜索文件中所有含有pattern的行，在这些行中找到的所有old内容，并且做yes or no 的替换确认
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;h5&gt;搜索替换匹配规则&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;.(点号) 表示任意一个字符
* 表示任意字符
^ 是正则表达式的开头
$ 正则表达式的结尾
\ 特殊字符
[] 匹配出方括号里的任何一个字符。
\&amp;lt; 以某字符开头
\&amp;gt; 以某字符结尾
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;h5&gt;查找替换多个文件内容&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;多文件查找内容

使用grep

直接在vim中输入:grep abc * 这是直接调用unix下的grep命令 

使用vimgrep 

基本用法就是
:vimgrep /匹配模式/[g][j] 要搜索的文件/范围 
:vim[grep][!] /{pattern}/[g][j] {file} ...
g 和 j 是两个可选的标志位，g表示是否把每一行的多个匹配结果都加入。j表示是否搜索完后定位到第一个匹配位置。
要搜索的文件 可以是具体的文件路径，也可以是带通配符的路径比如 *.as **/*.as ，**表示递归所有子目录。 要搜索的文件和或搜索范围都可 以写多个，用空格分开。

例子：

:vimgrep /\&amp;lt;flash\&amp;gt;/ **/*.as 搜索当前目录以及所有子目录内as文件中的 &amp;quot;flash&amp;quot;
:vimgrep /an error/ *.c 就是在所有的.c文件中搜索an error。
:vimgrep/an error/* 意思是查找当前目录下的文件中的an error，不包括子目录

定位 

输入上述的命令后，可以像输入:make命令，那样定位匹配到的文件位置 
:cnext (:cn)           下一个匹配位置
:cprevious (:cp)     上一个匹配位置
:cwindow (:cw)     quickfix窗口，可以选择匹配的文件位置
:cl(:clist)                查看所有匹配的位置

多文件替换(arg) 
a、加入要处理的文件  :args *.txt
b、输入对上述文件的动作  :argdo %s/hate/love/gc | update  （这里将hate替换成love，update表示要写入到文件中，否则只作替换而不写入）
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    if (/(iPhone|iPad|iPod|iOS|Android)/i.test(navigator.userAgent))
    { //移动端
        var cpro_id = &quot;u3471606&quot;;
        document.write(&quot;\&lt;script type=\&quot;text/javascript\&quot; src=\&quot;http://cpro.baidustatic.com/cpro/ui/cm.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
    else
    {
        /*700*200信息流*/
        var cpro_id = &quot;u3469788&quot;;
        document.write(&quot;\&lt;script type=\&quot;text\/javascript\&quot; src=\&quot;\/\/cpro.baidustatic.com\/cpro\/ui\/c.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
&lt;/script&gt; --&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
    /*700*200信息流*/
    var cpro_id = &quot;u3469788&quot;;
&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;//cpro.baidustatic.com/cpro/ui/c.js&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    /*文内嵌入*/
    var cpro_id = &quot;u3471606&quot;;
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://cpro.baidustatic.com/cpro/ui/cm.js&quot;&gt;&lt;/script&gt; --&gt;

&lt;h2&gt;高级进阶之强化功能&lt;/h2&gt;

&lt;h5&gt;1.分割多窗口&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;直接打开多窗口

    $ vim -o file1 file2 使用shell命令开启多窗口

分割窗口

    :[n]split [++opt] [+cmd] [file] 横向分割窗口

    : 前面必须以冒号开始命令

    n 为新窗口中显示的行数

    opt 为传递给新窗口的选项信息(必须前置两个+号)

    cmd 为传入新窗口中执行的命令(必须前置一个+号)

    file 指定打开的文件地址

    例如： :15split ++fileformat-unix ./site/testfile.txt
    新窗口有15行高，确保是unix文件格式，路径为./site/testfile.txt

    另外还有，vsplit, new, vnew都是同理分割窗口，split和new只有细微差别。
    :[n]vsplit [++opt] [+cmd] [file] 是垂直分割
    :[n]new [++opt] [+cmd] [file] 是横向分割，并执行自动命令
    :[n]vnew [++opt] [+cmd] [file] 为垂直分割，并执行自动命令

    此外，还有sview filename 和 sfind filename作为辅助作用也很重要。
    sview 以只读形式打分割一个窗口打开文件
    sfind 为在path中寻找filename，如果未找到则不会分割窗口

    vi命令
    split       ctrl + w then s
    vsplit      ctrl + w then v
    new         ctrl + w then n

窗口游走

    光标游走到下边窗口 ctrl + w then j 或 ↓(down)
    光标游走到上边窗口 ctrl + w then k 或 ↑(up)
    光标游走到左边窗口 ctrl + w then h 或 ←(left)
    光标游走到右边窗口 ctrl + w then l 或 →(right)

    另外还有一些不太实用的游走命令比如左上，右上，左下，右下游走等这里不进行细致的说明了，用到的实在是很少。

窗口移动

    移动本窗口到最顶端     ctrl + w then K(大写)
    移动本窗口到最底端     ctrl + w then J(大写)
    移动本窗口到最左端     ctrl + w then H(大写)
    移动本窗口到最右端     ctrl + w then L(大写)
    移动本窗口向右或向下轮换        ctrl + w then r(小写)
    移动本窗口向左或向上轮换        ctrl + w then R(大写)
    移动本窗口与下一个窗口交换     ctrl + w then x

    上下左右的窗口移动都是不太实用的操作，很少会有。本来窗口移动的频率就小，基本都是顶底左右，其他操作基本可以忽略。

窗口大小调整

    窗口高度减少一行    ctrl + w then -
    窗口高度增加一行    ctrl + w then +
    窗口宽度减少一行    ctrl + w then &amp;gt;
    窗口宽度增加一行    ctrl + w then &amp;lt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    if (/(iPhone|iPad|iPod|iOS|Android)/i.test(navigator.userAgent))
    { //移动端
        var cpro_id = &quot;u3471606&quot;;
        document.write(&quot;\&lt;script type=\&quot;text/javascript\&quot; src=\&quot;http://cpro.baidustatic.com/cpro/ui/cm.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
    else
    {
        /*700*200信息流*/
        var cpro_id = &quot;u3469788&quot;;
        document.write(&quot;\&lt;script type=\&quot;text\/javascript\&quot; src=\&quot;\/\/cpro.baidustatic.com\/cpro\/ui\/c.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
&lt;/script&gt; --&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
    /*700*200信息流*/
    var cpro_id = &quot;u3469788&quot;;
&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;//cpro.baidustatic.com/cpro/ui/c.js&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    /*文内嵌入*/
    var cpro_id = &quot;u3471606&quot;;
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://cpro.baidustatic.com/cpro/ui/cm.js&quot;&gt;&lt;/script&gt; --&gt;

&lt;h5&gt;2.标签页多窗口&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;    :tabe &amp;lt;文件名&amp;gt;  在新标签页中打开指定的文件。
    :tabnew &amp;lt;文件名&amp;gt;  在新标签页中编辑新的文件。
    :tab split  在新标签页中，打开当前缓冲区中的文件。
    :tabf 或 :tabfind  允许你在当前目录搜索文件，并在新标签页中打开。比如:tabf img.*。此命令只能打开一个文件.

    Vim默认最多只能打开10个标签页。你可以用set tabpagemax=15改变这个限制。

    列示标签页
    :tabs  显示已打开标签页的列表，并用“&amp;gt;”标识出当前页面，用“+”标识出已更改的页面。

    关闭标签页
    :tabc  关闭当前标签页。
    :tabo  关闭所有的标签页。
    :tabo :tabonly 关闭所有其他标签页

    切换标签
    :tabn 或 gt  移动到下一个标签页。
    :tabp 或 gT  移动到上一个标签页。
    :tabfirst 或 :tabfir 或 :tabr  移动到第一个标签页。
    :tablast 或 :tabl  移动到最后一个标签页。

    移动标签页
    :tabm [次序]  移动当前文件的标签页次序。比如:tabm 1将把当前标签页移动到第2的位置。如:tabm不指定参数将被移动到最后。

    配置标签页
    :set showtabline=[1,2,3]  标签页在窗口上方显示标签栏。=0完全不显示标签栏，=1只有用户新建时才显示，=2总是显示标签栏。

    多标签页命令
    :tabdo &amp;lt;命令&amp;gt;  同时在多个标签页中执行命令。比如:tabdo %s/food/drink/g 命令把当前多个标签页文件中的“food”都替换成“drink”。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;3.批量缩进&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;    方法一

    按v进入visual状态，选择多行，然后用&amp;gt;缩进或&amp;lt;缩出 

    方法二

    &amp;gt;为缩进，&amp;lt;为缩出，前面加n，表示当前行起n行同时缩进或缩出，5&amp;gt; then 回车 或 5&amp;lt; then 回车
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
               <pubDate>Sat, 30 Jun 2018 00:00:00 +0800</pubDate>
               <link>http://www.luzexi.com//%E5%85%B6%E4%BB%96%E6%8A%80%E6%9C%AF/2018/06/30/Vi%E5%92%8CVim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%9B%86.html</link>
               <guid isPermaLink="true">http://www.luzexi.com//%E5%85%B6%E4%BB%96%E6%8A%80%E6%9C%AF/2018/06/30/Vi%E5%92%8CVim%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%9B%86.html</guid>
            </item>
        
            <item>
               <title>Markdown(MD)的语法说明</title>
               <description>&lt;h1&gt;Markdown(MD)的语法说明&lt;/h1&gt;

&lt;p&gt;针对中文,演示Markdown的各种语法&lt;/p&gt;

&lt;p&gt;标题大小用多个#号表示大小，#越多字体越小&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1&gt;这是 H1&lt;/h1&gt;

&lt;p&gt;##&lt;/p&gt;

&lt;h2&gt;这是 H2&lt;/h2&gt;

&lt;p&gt;###&lt;/p&gt;

&lt;h3&gt;这是 H3&lt;/h3&gt;

&lt;p&gt;####&lt;/p&gt;

&lt;h4&gt;这是 h4&lt;/h4&gt;

&lt;p&gt;#####&lt;/p&gt;

&lt;h5&gt;这是 h5&lt;/h5&gt;

&lt;p&gt;######&lt;/p&gt;

&lt;h6&gt;这是 h6&lt;/h6&gt;

&lt;p&gt;????&lt;/p&gt;

&lt;h3&gt;注意!!!下面所有语法的提示我都先用小标题提醒了!!!&lt;/h3&gt;

&lt;h3&gt;单行文本框&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;这是一个单行的文本框,只要1个Tab再输入文字即可
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;多行文本框&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;    这是一个有多行的文本框
    你可以写入代码等,每行文字只要输入2个Tab再输入文字即可
    这里你可以输入一段代码
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;比如我们可以在多行文本框里输入一段代码,来一个Java版本的HelloWorld吧&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;    public class HelloWorld {
      /**
      * @param args
        */
        public static void main(String[] args) {
            System.out.println(&amp;quot;HelloWorld!&amp;quot;);

        }

    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    if (/(iPhone|iPad|iPod|iOS|Android)/i.test(navigator.userAgent))
    { //移动端
        var cpro_id = &quot;u3471606&quot;;
        document.write(&quot;\&lt;script type=\&quot;text/javascript\&quot; src=\&quot;http://cpro.baidustatic.com/cpro/ui/cm.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
    else
    {
        /*700*200信息流*/
        var cpro_id = &quot;u3469788&quot;;
        document.write(&quot;\&lt;script type=\&quot;text\/javascript\&quot; src=\&quot;\/\/cpro.baidustatic.com\/cpro\/ui\/c.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
&lt;/script&gt; --&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
    /*700*200信息流*/
    var cpro_id = &quot;u3469788&quot;;
&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;//cpro.baidustatic.com/cpro/ui/c.js&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    /*文内嵌入*/
    var cpro_id = &quot;u3471606&quot;;
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://cpro.baidustatic.com/cpro/ui/cm.js&quot;&gt;&lt;/script&gt; --&gt;

&lt;h3&gt;链接&lt;/h3&gt;

&lt;p&gt;链接内容定义的形式为：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字
接着一个冒号加空格或直接括号
接着链接的网址
选择性地接着 title 内容，可以用单引号、双引号或是括弧包着
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;例如:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;    [点击这里你可以链接到www.baidu.com](http://www.baidu.com)&amp;lt;br /&amp;gt;
    [点击这里我你可以链接到我的博客](http://luzexi.com)&amp;lt;br /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.baidu.com&quot;&gt;点击这里你可以链接到www.baidu.com&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://luzexi.com&quot;&gt;点击这里我你可以链接到我的博客&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;h3&gt;显示图片&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;    []前面加!就代表图片了，其他和普通的连接差不多
    ![icon](http://luzexi.com/public/apple-touch-icon-144-precomposed.png &amp;quot;icon&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://luzexi.com/public/apple-touch-icon-144-precomposed.png&quot; alt=&quot;icon&quot; title=&quot;icon&quot;&gt;&lt;/p&gt;

&lt;h3&gt;想点击某个图片进入一个网页,比如我想点击blog的icorn然后再进入www.luzexi.com&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;    []中加入图片显示，进行嵌套操作
    [![image](http://luzexi.com/public/favicon.ico &amp;quot;blog&amp;quot;)](http://www.luzexi.com/)
    这个可以分解拆分为[![image](http://luzexi.com/public/favicon.ico &amp;quot;blog&amp;quot;)] 和 (http://www.luzexi.com/) 两部分
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.luzexi.com/&quot;&gt;&lt;img src=&quot;http://luzexi.com/public/favicon.ico&quot; alt=&quot;image&quot; title=&quot;blog&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;文字被些字符包围&lt;/h3&gt;

&lt;p&gt;&amp;gt; 文字被些字符包围&lt;/p&gt;

&lt;p&gt;&amp;gt; 只要再文字前面加上&amp;gt;空格即可&lt;/p&gt;

&lt;p&gt;&amp;gt; 如果你要换行的话,新起一行,输入&amp;gt;空格即可,后面不接文字&lt;/p&gt;

&lt;p&gt;&amp;gt; 但&amp;gt; 只能放在行首才有效&lt;/p&gt;

&lt;p&gt;效果:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;文字被些字符包围&lt;/p&gt;

&lt;p&gt;只要再文字前面加上&amp;gt;空格即可&lt;/p&gt;

&lt;p&gt;如果你要换行的话,新起一行,输入&amp;gt;空格即可,后面不接文字
但&amp;gt; 只能放在行首才有效&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    if (/(iPhone|iPad|iPod|iOS|Android)/i.test(navigator.userAgent))
    { //移动端
        var cpro_id = &quot;u3471606&quot;;
        document.write(&quot;\&lt;script type=\&quot;text/javascript\&quot; src=\&quot;http://cpro.baidustatic.com/cpro/ui/cm.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
    else
    {
        /*700*200信息流*/
        var cpro_id = &quot;u3469788&quot;;
        document.write(&quot;\&lt;script type=\&quot;text\/javascript\&quot; src=\&quot;\/\/cpro.baidustatic.com\/cpro\/ui\/c.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
&lt;/script&gt; --&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
    /*700*200信息流*/
    var cpro_id = &quot;u3469788&quot;;
&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;//cpro.baidustatic.com/cpro/ui/c.js&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    /*文内嵌入*/
    var cpro_id = &quot;u3471606&quot;;
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://cpro.baidustatic.com/cpro/ui/cm.js&quot;&gt;&lt;/script&gt; --&gt;

&lt;h3&gt;文字被些字符包围,多重包围&lt;/h3&gt;

&lt;p&gt;&amp;gt; 文字被些字符包围开始&lt;/p&gt;

&lt;p&gt;&amp;gt; &amp;gt; 只要再文字前面加上&amp;gt;空格即可&lt;/p&gt;

&lt;p&gt;&amp;gt;  &amp;gt; &amp;gt; 如果你要换行的话,新起一行,输入&amp;gt;空格即可,后面不接文字&lt;/p&gt;

&lt;p&gt;&amp;gt; &amp;gt; &amp;gt; &amp;gt; 但&amp;gt; 只能放在行首才有效&lt;/p&gt;

&lt;p&gt;效果:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;文字被些字符包围开始&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;只要再文字前面加上&amp;gt;空格即可&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;如果你要换行的话,新起一行,输入&amp;gt;空格即可,后面不接文字&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;但&amp;gt; 只能放在行首才有效&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h3&gt;特殊字符处理&lt;/h3&gt;

&lt;p&gt;有一些特殊字符如&amp;lt;,#等,只要在特殊字符前面加上转义字符\即可&lt;br /&gt;
你想换行的话其实可以直接用html标签&amp;lt;br /&amp;gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;列表&lt;/h3&gt;

&lt;h5&gt;无序列表使用星号、加号或是减号作为列表标记：&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;*   Jesse
*   Sharon
*   Anne
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Jesse&lt;/li&gt;
&lt;li&gt;  Sharon&lt;/li&gt;
&lt;li&gt;  Anne&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;等同于：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;+   Jesse
+   Sharon
+   Anne
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Jesse&lt;/li&gt;
&lt;li&gt;  Sharon&lt;/li&gt;
&lt;li&gt;  Anne&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;等同于：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;-   Jesse
-   Sharon
-   Anne
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Jesse&lt;/li&gt;
&lt;li&gt;  Sharon&lt;/li&gt;
&lt;li&gt;  Anne&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h5&gt;有序列表则使用数字接着一个英文句点&lt;/h5&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;1.  Jesse
2.  Sharon
3.  Anne
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Jesse&lt;/li&gt;
&lt;li&gt; Sharon&lt;/li&gt;
&lt;li&gt; Anne&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;等同于:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;1. Jesse
1. Sharon
1. Anne
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Jesse&lt;/li&gt;
&lt;li&gt;Sharon&lt;/li&gt;
&lt;li&gt;Anne&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;等同于:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;4. Jesse
2. Sharon
8. Anne
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Jesse&lt;/li&gt;
&lt;li&gt;Sharon&lt;/li&gt;
&lt;li&gt;Anne&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    if (/(iPhone|iPad|iPod|iOS|Android)/i.test(navigator.userAgent))
    { //移动端
        var cpro_id = &quot;u3471606&quot;;
        document.write(&quot;\&lt;script type=\&quot;text/javascript\&quot; src=\&quot;http://cpro.baidustatic.com/cpro/ui/cm.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
    else
    {
        /*700*200信息流*/
        var cpro_id = &quot;u3469788&quot;;
        document.write(&quot;\&lt;script type=\&quot;text\/javascript\&quot; src=\&quot;\/\/cpro.baidustatic.com\/cpro\/ui\/c.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
&lt;/script&gt; --&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
    /*700*200信息流*/
    var cpro_id = &quot;u3469788&quot;;
&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;//cpro.baidustatic.com/cpro/ui/c.js&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    /*文内嵌入*/
    var cpro_id = &quot;u3471606&quot;;
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://cpro.baidustatic.com/cpro/ui/cm.js&quot;&gt;&lt;/script&gt; --&gt;

&lt;h3&gt;分割线&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;    * * *

    ***

    *****

    - - -

    ---------------------------------------
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果:&lt;/p&gt;

&lt;p&gt;test1&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;test2&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;test3&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;testend&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;强调&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;    *single asterisks*

    _single underscores_

    **double asterisks**

    __double underscores__
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;效果:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;single asterisks&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;single underscores&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;double asterisks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;double underscores&lt;/strong&gt;&lt;/p&gt;
</description>
               <pubDate>Wed, 27 Jun 2018 00:00:00 +0800</pubDate>
               <link>http://www.luzexi.com//%E5%85%B6%E4%BB%96%E6%8A%80%E6%9C%AF/2018/06/27/Markdown-MD-%E7%9A%84%E8%AF%AD%E6%B3%95%E8%AF%B4%E6%98%8E.html</link>
               <guid isPermaLink="true">http://www.luzexi.com//%E5%85%B6%E4%BB%96%E6%8A%80%E6%9C%AF/2018/06/27/Markdown-MD-%E7%9A%84%E8%AF%AD%E6%B3%95%E8%AF%B4%E6%98%8E.html</guid>
            </item>
        
            <item>
               <title>JaveScript的奇葩写法规则</title>
               <description>&lt;h1&gt;JaveScript的奇葩写法规则&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;h3&gt;=&amp;gt; 箭头函数&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;两个箭头同时使用 arg1 =&amp;gt; arg2 =&amp;gt;{return xxx;}
可以理解为
function( arg1 )
{
    return function(arg2)
    {
        return xxx;
    }
}
也就是可以是 (arg1,arg2)=&amp;gt;{return xxx;}的简写
也就是function( arg1, arg2 ){ return xxx; }的意思
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;===&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;... 剩余数据&lt;/h3&gt;

&lt;h6&gt;数组中的剩余数据&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;[a, b, ...rest] = [10, 20, 30, 40, 50];
console.log(a); // 10
console.log(b); // 20
console.log(rest); // [30, 40, 50]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;对象中的剩余数据&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;({a, b, ...rest} = {a: 10, b: 20, c: 30, d: 40});
console.log(a); // 10
console.log(b); // 20
console.log(rest); // {c: 30, d: 40}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    if (/(iPhone|iPad|iPod|iOS|Android)/i.test(navigator.userAgent))
    { //移动端
        var cpro_id = &quot;u3471606&quot;;
        document.write(&quot;\&lt;script type=\&quot;text/javascript\&quot; src=\&quot;http://cpro.baidustatic.com/cpro/ui/cm.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
    else
    {
        /*700*200信息流*/
        var cpro_id = &quot;u3469788&quot;;
        document.write(&quot;\&lt;script type=\&quot;text\/javascript\&quot; src=\&quot;\/\/cpro.baidustatic.com\/cpro\/ui\/c.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
&lt;/script&gt; --&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
    /*700*200信息流*/
    var cpro_id = &quot;u3469788&quot;;
&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;//cpro.baidustatic.com/cpro/ui/c.js&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    /*文内嵌入*/
    var cpro_id = &quot;u3471606&quot;;
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://cpro.baidustatic.com/cpro/ui/cm.js&quot;&gt;&lt;/script&gt; --&gt;

&lt;ol&gt;
&lt;li&gt;&lt;h3&gt;[] 数组分配赋值用法&lt;/h3&gt;

&lt;h6&gt;数组分配1&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;var x = [1, 2, 3, 4, 5];
var [y, z] = x;
console.log(y); // 1
console.log(z); // 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;数组分配2&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;var foo = [&amp;#39;one&amp;#39;, &amp;#39;two&amp;#39;, &amp;#39;three&amp;#39;];
var [one, two, three] = foo;
console.log(one); // &amp;quot;one&amp;quot;
console.log(two); // &amp;quot;two&amp;quot;
console.log(three); // &amp;quot;three&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;数组赋值默认值用法&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;var a, b;
[a=5, b=7] = [1];
console.log(a); // 1
console.log(b); // 7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;用数组做变量置换&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;var a = 1;
var b = 3;
[a, b] = [b, a];
console.log(a); // 3
console.log(b); // 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;省略赋值用法&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;var [a, ...b] = [1, 2, 3];
console.log(a); // 1
console.log(b); // [2, 3]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3&gt;{} 对象分配用法&lt;/h3&gt;

&lt;h6&gt;对象分配赋值&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;var o = {p: 42, q: true};
var {p, q} = o;
console.log(p); // 42
console.log(q); // true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;默认值用法&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;var {a = 10, b = 5} = {a: 3};
console.log(a); // 3
console.log(b); // 5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;指定key赋值+默认值&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;var {a:aa = 10, b:bb = 5} = {a: 3};
console.log(aa); // 3
console.log(bb); // 5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;指定属性key解析赋值&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;let key = &amp;#39;z&amp;#39;;
let {[key]: foo} = {z: &amp;#39;bar&amp;#39;};
console.log(foo); // &amp;quot;bar&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;对象中剩余赋值法&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;let {a, b, ...rest} = {a: 10, b: 20, c: 30, d: 40}
a; // 10 
b; // 20 
rest; // { c: 30, d: 40 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;弱变量定义与赋值&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;const foo = { &amp;#39;fizz-buzz&amp;#39;: true };
const { &amp;#39;fizz-buzz&amp;#39;: fizzBuzz } = foo;
console.log(fizzBuzz); // &amp;quot;true&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    if (/(iPhone|iPad|iPod|iOS|Android)/i.test(navigator.userAgent))
    { //移动端
        var cpro_id = &quot;u3471606&quot;;
        document.write(&quot;\&lt;script type=\&quot;text/javascript\&quot; src=\&quot;http://cpro.baidustatic.com/cpro/ui/cm.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
    else
    {
        /*700*200信息流*/
        var cpro_id = &quot;u3469788&quot;;
        document.write(&quot;\&lt;script type=\&quot;text\/javascript\&quot; src=\&quot;\/\/cpro.baidustatic.com\/cpro\/ui\/c.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
&lt;/script&gt; --&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
    /*700*200信息流*/
    var cpro_id = &quot;u3469788&quot;;
&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;//cpro.baidustatic.com/cpro/ui/c.js&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    /*文内嵌入*/
    var cpro_id = &quot;u3471606&quot;;
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://cpro.baidustatic.com/cpro/ui/cm.js&quot;&gt;&lt;/script&gt; --&gt;

&lt;ol&gt;
&lt;li&gt;&lt;h3&gt;Object.assign() 合并对象&lt;/h3&gt;

&lt;h6&gt;将源对象（ source ）的所有可枚举属性，复制到目标对象（ target ）&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;var target = { a: 1 };
var source1 = { b: 2 };
var source2 = { c: 3 };
Object.assign(target, source1, source2);
target // {a:1, b:2, c:3}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;如果目标对象与源对象有同名属性，或多个源对象有同名属性，则后面的属性会覆盖前面的属性&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;var target = { a: 1, b: 1 };
var source1 = { b: 2, c: 2 };
var source2 = { c: 3 };
Object.assign(target, source1, source2);
target // {a:1, b:2, c:3}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Object.assign方法实行的是浅拷贝，而不是深拷贝。也就是说，如果源对象某个属性的值是对象，那么目标对象拷贝得到的是这个对象的引用。&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;var obj1 = {a: {b: 1}};
var obj2 = Object.assign({}, obj1);
obj1.a.b = 2;
obj2.a.b // 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;对于这种嵌套的对象，一旦遇到同名属性，Object.assign的处理方法是替换，而不是添加。&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;var target = { a: { b: &amp;#39;c&amp;#39;, d: &amp;#39;e&amp;#39; } }
var source = { a: { b: &amp;#39;hello&amp;#39; } }
Object.assign(target, source)
// { a: { b: &amp;#39;hello&amp;#39; } }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h6&gt;Object.assign 常见用途&lt;/h6&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;为对象添加属性
class Point {
    constructor(x, y) {
        Object.assign(this, {x, y});
    }
}

为对象添加方法
Object.assign(SomeClass.prototype, {
    someMethod(arg1, arg2) {
    ···
    },
    anotherMethod() {
    ···
    }
});
//  等同于下面的写法
SomeClass.prototype.someMethod = function (arg1, arg2) {
···
};
SomeClass.prototype.anotherMethod = function () {
···
};

克隆对象
function clone(origin) {
    return Object.assign({}, origin);
}

合并多个对象
const merge =(target, ...sources) =&amp;gt; Object.assign(target, ...sources);

为属性指定默认值
const DEFAULTS = {
    logLevel: 0,
    outputFormat: &amp;#39;html&amp;#39;
};
function processContent(options) {
    let options = Object.assign({}, DEFAULTS, options);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
               <pubDate>Tue, 26 Jun 2018 00:00:00 +0800</pubDate>
               <link>http://www.luzexi.com//%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/%E5%85%B6%E4%BB%96%E6%8A%80%E6%9C%AF/2018/06/26/JaveScript%E7%9A%84%E5%A5%87%E8%91%A9%E5%86%99%E6%B3%95%E8%A7%84%E5%88%99.html</link>
               <guid isPermaLink="true">http://www.luzexi.com//%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/%E5%85%B6%E4%BB%96%E6%8A%80%E6%9C%AF/2018/06/26/JaveScript%E7%9A%84%E5%A5%87%E8%91%A9%E5%86%99%E6%B3%95%E8%A7%84%E5%88%99.html</guid>
            </item>
        
            <item>
               <title>股市的底部究竟是怎样形成的</title>
               <description>&lt;h1&gt;股市的底部究竟是怎样形成的&lt;/h1&gt;

&lt;p&gt;股灾再一次来临，对于大部分投资者来说都是痛苦的。中国股市这两年在金融领域受挫很大，股，债，汇都面临巨大的压力，爆发出无数的问题。大部分投资者都付出了沉痛的代价，30%的损失已经算是少的了，多的可以达到70-80%甚至90%以上的损失。&lt;/p&gt;

&lt;p&gt;===&lt;/p&gt;

&lt;p&gt;不过无论环境有多差，投机的活跃资金一直都会尝试新的突破和抄底。但个人意志和能力拗不过大的趋势，中国股市也在持续滑向风雨缥缈，活跃资金的一次次的抄底带来的一次次的失望，导致抄底资金也陷入了困境。这让所有的人都陷入了失望，失望我认为还太轻，绝望又太重，差不多是在失望和绝望的中间状态。&lt;/p&gt;

&lt;p&gt;有话说的好，要在别人恐惧的时候我贪婪，别人贪婪的时候我恐惧。这句话虽然没什么大问题，而且算是极其有道理的，但细化的内容大家都没有认识到，一味得执行别人恐惧我贪婪，别人贪婪我恐惧，就容易导致巨大的亏损。细化内容比如你如何判断大家是最后一次恐惧，而不会继续恐惧，又比如如何判断别人是最后一次绝望的，而不会有更绝望的事情发生，反过来也是一样，如何判断大家是贪婪的，并且不会有更贪婪的事情发生。除了上面说的几条外，还需要自身做到一些非常人的境界，比如自身必须不受恐惧影响，不害怕不犹豫的坚定买入，又比如买入时能否做到冷静克制而不贪婪，不可以一次性提升大量仓位而是在2个月或者半年内慢慢提升仓位，又比如当买入时再次遇到恐惧甚至踩踏，是否能够理性分析临危不乱。&lt;/p&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    if (/(iPhone|iPad|iPod|iOS|Android)/i.test(navigator.userAgent))
    { //移动端
        var cpro_id = &quot;u3471606&quot;;
        document.write(&quot;\&lt;script type=\&quot;text/javascript\&quot; src=\&quot;http://cpro.baidustatic.com/cpro/ui/cm.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
    else
    {
        /*700*200信息流*/
        var cpro_id = &quot;u3469788&quot;;
        document.write(&quot;\&lt;script type=\&quot;text\/javascript\&quot; src=\&quot;\/\/cpro.baidustatic.com\/cpro\/ui\/c.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
&lt;/script&gt; --&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
    /*700*200信息流*/
    var cpro_id = &quot;u3469788&quot;;
&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;//cpro.baidustatic.com/cpro/ui/c.js&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    /*文内嵌入*/
    var cpro_id = &quot;u3471606&quot;;
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://cpro.baidustatic.com/cpro/ui/cm.js&quot;&gt;&lt;/script&gt; --&gt;

&lt;p&gt;首先必须坚定的事实是，金融是动态的，并且反射到我们生活中来说，世界也是动态的。事件，事情，经济，人心，都是在动态的发生着变化，谁都无法准确预料明天，或者下一秒会发生什么事情。今天的底，有可能是明天的中继平台，今天的涨，也有可能是只是反弹后继续下跌的一个陷阱。但是为什么，从现在看历史，历史是却是清晰的，为什么？！因为金融是动态的，世界是动态的，人心是动态的，他随时随地的在变化，没有人能准确预料到下一秒会是什么。但是，这里重点强调，一旦发生就固定在了历史中了。这就是为什么，我们回顾看历史都是固定清晰的，而当前的状况或者说当前的情况，都是模糊不清，难以琢磨的。&lt;/p&gt;

&lt;p&gt;如果要刨根问底说，为什么就无法准确预料下一秒下一天下个月发生的事呢，答案就是人本身。这个世界是由人创造的，金融也是一样是由人创造出来，它受到人心的支配，人心是怎么样的，它就是怎么样的，人心是飘忽不定的，它也就是飘忽不定的。我们生活在人类创造的世界里，受到人群的影响，而人本身思维就是个无法琢磨的无法确定的存在，无论你多少厉害，都无法确定的知道人本身是如何想的，即使你知道人是如何想的，也并不可能知道他会如何做，因为世界是动态的，人与人之间的影响也是动态的，所有这一切你看到的都是动态的。就是由于人类本身是无法琢磨的，导致了无法准确的预测人类的行为，进而导致无法准确的预测下一秒下一天下个月发生的事。&lt;/p&gt;

&lt;p&gt;无法准确预测是件很恐怖的事，因为未知，或者说对未知的恐惧。庆幸的是，无法准确预测，却可以从一个比较长的时间中猜测到大概率会发生什么。我们可以根据大概率发生的事件而提前布局，比如中国股市大概率在未来10-20年内会全面开放给全球，全球投资者涌入的同时会带来一波巨大的牛市，冲破6000点不是梦。当然，这10-20年内中间的过程究竟会发生什么，谁都无法知道。就目前来看，是不会太顺利的。毕竟不经历风雨怎能见彩虹。&lt;/p&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    if (/(iPhone|iPad|iPod|iOS|Android)/i.test(navigator.userAgent))
    { //移动端
        var cpro_id = &quot;u3471606&quot;;
        document.write(&quot;\&lt;script type=\&quot;text/javascript\&quot; src=\&quot;http://cpro.baidustatic.com/cpro/ui/cm.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
    else
    {
        /*700*200信息流*/
        var cpro_id = &quot;u3469788&quot;;
        document.write(&quot;\&lt;script type=\&quot;text\/javascript\&quot; src=\&quot;\/\/cpro.baidustatic.com\/cpro\/ui\/c.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
&lt;/script&gt; --&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
    /*700*200信息流*/
    var cpro_id = &quot;u3469788&quot;;
&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;//cpro.baidustatic.com/cpro/ui/c.js&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    /*文内嵌入*/
    var cpro_id = &quot;u3471606&quot;;
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://cpro.baidustatic.com/cpro/ui/cm.js&quot;&gt;&lt;/script&gt; --&gt;

&lt;p&gt;从上面的分析来看，股市是不确定的，无法准确的预测，甚至有时模糊的预测都是错误的，只可以做一个5年或者10年或者20年后大概率发生的事，时间越久概率越大。人性恐惧导致了底部还有底。&lt;/p&gt;

&lt;p&gt;面对下跌的熊市，那么最终股市的底部是如何形成的呢，我们来推演下沙盘。这可以解决我们的心理的疑惑，知道未来会发生的大概的模糊的画面，好让自己有个心理准备，并且做出相应的对策。&lt;/p&gt;

&lt;p&gt;1.下跌。有人开始卖出，↓&lt;/p&gt;

&lt;p&gt;2.持续下跌。越来越多人不相信会涨，↓↓&lt;/p&gt;

&lt;p&gt;3.巨幅下跌。大家都认为要跌了，↓↓↓&lt;/p&gt;

&lt;p&gt;4.买卖平衡横盘走势。大家认为跌的有点多，→→→&lt;/p&gt;

&lt;p&gt;5.反弹。一部分人认为跌多了会涨回来点，↑&lt;/p&gt;

&lt;p&gt;6.反弹结束买卖平衡横盘。有人不相信会涨回去，→&lt;/p&gt;

&lt;p&gt;7.继续下跌。越来越多人不相信会涨回去，↓&lt;/p&gt;

&lt;p&gt;8.大幅下跌。越来越多人认为利空消息还会继续，↓↓&lt;/p&gt;

&lt;p&gt;9.巨幅下跌，跌破前期支撑。所有人都一致认为利空消息太大，↓↓↓&lt;/p&gt;

&lt;p&gt;10.继续下跌。利空消息让所有人恐惧，↓&lt;/p&gt;

&lt;p&gt;11.深跌后大量股票跌幅达到30-50%，开始横盘。人们开始反思是不是跌太多了。→&lt;/p&gt;

&lt;p&gt;12.反弹开启。越来越多人相信跌太多了。↑&lt;/p&gt;

&lt;p&gt;13.买卖平衡。有人相信跌太多，有人求早点跑。→&lt;/p&gt;

&lt;p&gt;14.又开始跌。抢跑的人又开始抛售。↓&lt;/p&gt;

&lt;p&gt;15.继续跌破前期低点。所有人都陷入绝望。↓↓&lt;/p&gt;

&lt;p&gt;16.横盘或持续阴跌。人们看不到希望，认为没有希望。→↓→↓&lt;/p&gt;

&lt;p&gt;17.大部分股票跌入安全区，但任然在跌。恐惧的氛围一直没有散开。→→↓→→↓&lt;/p&gt;

&lt;p&gt;18.开始有人相信买入安全区的股票是有价值的，但股市并没有买账，因为相信的人太少。→→→→↓→→→→&lt;/p&gt;

&lt;p&gt;19.又一些人加入相信安全区的行列，股市开始不再阴跌而是横盘或在小范围上下震荡。→→→→&lt;/p&gt;

&lt;p&gt;20.越来越多人认为现在时安全区，持续买入的力量越来越大。股市从小幅震荡变为了大幅度震荡。→→↑→→↑&lt;/p&gt;

&lt;p&gt;21.这种震荡并没有使得股市形成向上的趋势，任然在某个位置，上上下下的来回震荡。→↑→↓&lt;/p&gt;

&lt;p&gt;22.有一部分人看不到希望，开始退场。又开始持续阴跌。↓&lt;/p&gt;

&lt;p&gt;23.越来越多的人跟随看不到希望的人退出场外。又开始大幅下跌。↓↓&lt;/p&gt;

&lt;p&gt;24.可能又再一次跌破了前期的低点，或者接近前期的低点。所有人都绝望。↓↓&lt;/p&gt;

&lt;p&gt;25.利好消息终于来临。但没有人相信。股市继续横盘。→→→→&lt;/p&gt;

&lt;p&gt;26.小幅上涨，开始有人相信利好消息将带来股市上涨。→→↑→→↑&lt;/p&gt;

&lt;p&gt;27.大幅上涨，越来越多人相信并且买入。→↑→↑&lt;/p&gt;

&lt;p&gt;28.反复在利空和利好消息的情绪变化中思考，总体上是震荡向上的，局部是横盘震荡格局。→↑→↓&lt;/p&gt;

&lt;p&gt;29.底部形成。&lt;/p&gt;

&lt;p&gt;底部的形成是个艰难的，并且时间很长的过程，大概需要花起码半年的时间。在风雨缥缈中构建，在悄无声息中成长。&lt;/p&gt;
</description>
               <pubDate>Fri, 22 Jun 2018 00:00:00 +0800</pubDate>
               <link>http://www.luzexi.com//%E9%87%91%E8%9E%8D/2018/06/22/%E8%82%A1%E5%B8%82%E7%9A%84%E5%BA%95%E9%83%A8%E7%A9%B6%E7%AB%9F%E6%98%AF%E6%80%8E%E6%A0%B7%E5%BD%A2%E6%88%90%E7%9A%84.html</link>
               <guid isPermaLink="true">http://www.luzexi.com//%E9%87%91%E8%9E%8D/2018/06/22/%E8%82%A1%E5%B8%82%E7%9A%84%E5%BA%95%E9%83%A8%E7%A9%B6%E7%AB%9F%E6%98%AF%E6%80%8E%E6%A0%B7%E5%BD%A2%E6%88%90%E7%9A%84.html</guid>
            </item>
        
            <item>
               <title>Back to blog</title>
               <description>&lt;h1&gt;Back to blog&lt;/h1&gt;

&lt;p&gt;It&amp;#39;s a long time before back to blog. Before, I went to Weibo to study something about finance. It&amp;#39;s good for me in the future. So now I have much knowledge and experience in finance invest. I&amp;#39;m glad that I make the real world more close to me.&lt;/p&gt;

&lt;p&gt;===&lt;/p&gt;

&lt;p&gt;And also, through studying finance I completely know technology is very much importanter than i thought before. Technology makes me have good work or job and also good life. Good life is the most important thing, and good life is depends on money and work sometime must be chanllenge. Money is not the most important thing but work and knowledge is, if you have knowledge and keep works you will be talent which must be popular round you.&lt;/p&gt;

&lt;p&gt;I stay at Weibo for a long time and learn much. But why I&amp;#39;m back, first reason is its too much information in Weibo both good and bad that makes me mix. Second one is more and more uesless information on Weibo makes me too tired to skip them. So i said to myself that i must think in individual style, only thinking individual style makes me more and more powerful. If I just follow some guy or some information I will be completely failed in my life. The only way to beat otherones else is keep leaning and thinking in individual style.&lt;/p&gt;

&lt;p&gt;Now I&amp;#39;m back. It&amp;#39;s a completely new start for my technology and my life. I will record all my mind, idea, experience or life in the blog. I wont be shy if my words were error in your view, but I would like to see that you can comment in the end of the page.&lt;/p&gt;

&lt;p&gt;&amp;#39;Keep moving, never stop&amp;quot; is my motto.&lt;/p&gt;

&lt;p&gt;Thanks for your reading.&lt;/p&gt;
</description>
               <pubDate>Fri, 22 Jun 2018 00:00:00 +0800</pubDate>
               <link>http://www.luzexi.com//life/2018/06/22/Back-to-Blog.html</link>
               <guid isPermaLink="true">http://www.luzexi.com//life/2018/06/22/Back-to-Blog.html</guid>
            </item>
        
            <item>
               <title>Swimming excercise</title>
               <description>&lt;h1&gt;Swimming excercise&lt;/h1&gt;

&lt;p&gt;Hi guys, recently i swim a lot, it make feel good. These years i work so hard that make my body worse and worse, so i decide to do some excercise to keep health. i think swim is good maybe the one of the best sport for health.&lt;/p&gt;

&lt;p&gt;===&lt;/p&gt;

&lt;p&gt;Actually my first swimming in shanghai make me terrible. I didnot do any excersice for a long time before that, And i event didnot spread myself before jump in the water. I just went in the swimming pool and spend all of energy to swim one side to the other side very fast, therefor i feel lots tried and dizzy. And then you know what, im fucking vomit, damn it.&lt;/p&gt;

&lt;p&gt;Since that i didnt go to swim a long time, maybe 3 month i dont remember. But i still try to do some excersice to keep health. i try to go to gym and buy 5 years membership. i know its waste my money but i bought :( 2 month ago i decide to come back to swim again. This time i try swimming carefully and do spread myself before swim and swim slowly at the beginning. Its feels good, and i think its make me realize that swimming is really good for health and easy to have in my life. So i start to swim every week and recommend others to swim.&lt;/p&gt;

&lt;p&gt;Actually these years i touch many new stuff in my life. i tried understanding foreign culture and learning foreign language and travelling lots of foreign countries and do swimming sport. All these stuffs are out of work, but i think its good for my life. I learn much things which i never touch any or maybe dont like it any. I think its great, i like to challenge.&lt;/p&gt;

&lt;p&gt;Well, i really like swimming but u know sometimes people is just like to do it in a short time, but i think i will insist swimming in a long time, maybe 3 years maybe 10 years. i dont know, i hope i can insist much more times.&lt;/p&gt;

&lt;p&gt;Now i&amp;#39;m going to build a swim club to collect people who love to swim or would like to swim. Its will be much fun if a group people go together and do the same thing. People know that swim is good for their health, but still dont want to play. These&amp;#39;s many reason i heard what they dont want to go. A lot of people dont know how to swim and some of them afraid water, And others maybe too lazy or too busy to do.&lt;/p&gt;

&lt;p&gt;If you would like to swim pls join us. Whatever, i will never give up persuading people to swim.
Well i create a swim club in meetup , if you would like to join us ,pls open it and join.
http://www.meetup.com/Shanghai-Swimming-Meetup/&lt;/p&gt;
</description>
               <pubDate>Fri, 22 Apr 2016 00:00:00 +0800</pubDate>
               <link>http://www.luzexi.com//life/2016/04/22/Swimclub.html</link>
               <guid isPermaLink="true">http://www.luzexi.com//life/2016/04/22/Swimclub.html</guid>
            </item>
        
            <item>
               <title>Gitlab removal</title>
               <description>&lt;h1&gt;Gitlab removal&lt;/h1&gt;

&lt;p&gt;Hi guys, long time no see. these day i have much work and much things to learn so i didnot write any thing in the blog, sorry about that. its really busy in my probject. u know people always have their own reason not to do something lol. one day i saw my server which i bought in aliyun is almost time over, so i think about whether i should change the region of the server to hongkong. finally i make a decision to move my blog, gitlab and some other things to hongkong server.&lt;/p&gt;

&lt;p&gt;at the begion of the preparation, i try to buy a hongkong server for a month to test the network and server&amp;#39;s perform. actually it is really good. so im start to move blog, gitlab and svn etc. to my new server.&lt;/p&gt;

&lt;p&gt;===&lt;/p&gt;

&lt;h1&gt;Prolbem&lt;/h1&gt;

&lt;p&gt;1.the first problem i have is which folder or data i have to move.&lt;/p&gt;

&lt;p&gt;i move the whole git folder to new server include gitlab, gitlab-satellites, gitlab-shell, https-ca, repositories.&lt;/p&gt;

&lt;p&gt;2.the second problem i have is mysql data.&lt;/p&gt;

&lt;p&gt;i have lots of data in gitlab and the gitlab save the data in mysql, so i have to move them as the same.&lt;/p&gt;

&lt;p&gt;actually its easy to move mysql. i just install mysql in new server and dump the data of mysql then import them into new server.&lt;/p&gt;

&lt;p&gt;ok, all of the data is already be move to new server.&lt;/p&gt;

&lt;p&gt;3.the hardest things i have is install ruby, lib of mysql and some of the dependent stuff.&lt;/p&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    if (/(iPhone|iPad|iPod|iOS|Android)/i.test(navigator.userAgent))
    { //移动端
        var cpro_id = &quot;u3471606&quot;;
        document.write(&quot;\&lt;script type=\&quot;text/javascript\&quot; src=\&quot;http://cpro.baidustatic.com/cpro/ui/cm.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
    else
    {
        /*700*200信息流*/
        var cpro_id = &quot;u3469788&quot;;
        document.write(&quot;\&lt;script type=\&quot;text\/javascript\&quot; src=\&quot;\/\/cpro.baidustatic.com\/cpro\/ui\/c.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
&lt;/script&gt; --&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
    /*700*200信息流*/
    var cpro_id = &quot;u3469788&quot;;
&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;//cpro.baidustatic.com/cpro/ui/c.js&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    /*文内嵌入*/
    var cpro_id = &quot;u3471606&quot;;
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://cpro.baidustatic.com/cpro/ui/cm.js&quot;&gt;&lt;/script&gt; --&gt;

&lt;p&gt;its really hard for me to install lib of mysql for ruby because i dont know which source of apt-get i should use. i installed
5.5.47 mysql version but it tells me the lib of mysql is 5.5.37 and it is the newest version in source of apt-get which the installed is failed. i change some of them but still cant be install. i even download the mysql of source and make them and try to pick the lib to install but failed. finally i choose the nature source of aliyun to install the lib of mysql, its success. i think its my bad, because i dont believe the nature source of aliyun so i change it.&lt;/p&gt;

&lt;p&gt;4.After i finished all, i open gitlab site and it works. Then pull one of the repositories and change some file and push them. It said something wrong in the gitlab so i cant push the commit. i check search the problem and find i have to reline the update file in every repositories&amp;#39;s hook. So i do it, but it still socks. A little git time later i find that redis is not able to visit, so i add the user which git use into redis group. So the redis&amp;#39;s problem is solved but still cant push. I feel something wrong in satellites but i actually dont how to fix. So i remove all of the gitlab except repositories and install gitlab again, then import the respositories by using:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;cd /home/git/gitlab/
sudo -u git -H bundle exec rake gitlab:import:repos RAILS_ENV=production
sudo -u git -H bundle exec rake gitlab:satellites:create RAILS_ENV=production
sudo chmod -R ug+rwX,o-rwx /home/git/repositories/
sudo chmod -R ug-s /home/git/repositories/
find /home/git/repositories/ -type d -print0 | sudo xargs -0 chmod g+s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;5.now i finished setup the lib of all i need. and then i have to set the config to let the gitlab run.&lt;/p&gt;

&lt;p&gt;i set the gitlab config, gitlab-shell config and the nginx vhost, its much easy because i set them before in the old server.&lt;/p&gt;

&lt;p&gt;ok i should check all of the setting by using: sudo -u git -H bundle exec rake gitlab:env:info RAILS_ENV=production&lt;/p&gt;

&lt;h1&gt;all of thing is ok now, so lets run the gitlab.&lt;/h1&gt;
</description>
               <pubDate>Tue, 19 Apr 2016 00:00:00 +0800</pubDate>
               <link>http://www.luzexi.com//%E5%85%B6%E4%BB%96%E6%8A%80%E6%9C%AF/2016/04/19/Gitlab-removal.html</link>
               <guid isPermaLink="true">http://www.luzexi.com//%E5%85%B6%E4%BB%96%E6%8A%80%E6%9C%AF/2016/04/19/Gitlab-removal.html</guid>
            </item>
        
            <item>
               <title>译安卓应用架构体系</title>
               <description>&lt;h1&gt;安卓应用架构体系&lt;/h1&gt;

&lt;p&gt;我们经历了从标准的Activity加AsyncTask架构到当前流行的用RxJava驱动的MVP模式为基础的架构体系。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-355&quot; src=&quot;/assets/译安卓应用架构体系/1.png&quot; alt=&quot;48391BD3-BEAC-4E45-B6C4-17AA7B5B0428&quot; /&gt;
不同部分的软件模块应该是独立的，但放在一起工作时却想是个烂醉的机器--Chester Alvarez拍的照片&lt;/p&gt;

&lt;p&gt;安卓开发生态步伐很快，每个星期都有新的工具被创建，新的库被更新，新的博客文章发出来，新的话题被讨论。如果你去度假了一个月，你回来的时候就会有新版本的支持库或者新的服务等你去处理。
我在ribot团队做了3年的安卓应用。在此期间，我们使用的安卓应用技术和架构已经连续演变了很多次。这篇文章将带你经历讲述我们是如何在架构变化下学习，出错并且找到原因的。&lt;/p&gt;

&lt;p&gt;===&lt;/p&gt;

&lt;h3&gt;旧时代&lt;/h3&gt;

&lt;p&gt;回到2012年我们底层习惯使用基础的结构。我们不使用任何的网络库但AsyncTask任然是我们的朋友。下面的图差不多展示这个架构是个怎样子的。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-355&quot; src=&quot;/assets/译安卓应用架构体系/2.png&quot; alt=&quot;48391BD3-BEAC-4E45-B6C4-17AA7B5B0428&quot; /&gt;
初始的架构&lt;/p&gt;

&lt;p&gt;程序使用两层结构：数据层负责使用REST API检索和保存数据并持久化数据存储。视图层负责调用句柄和在UI上显示数据。
APIProvider 提供方法使得Activity和Fragment容易用REST API相互通信。这些方法使用URLConnection和AsyncTask执行网络调用在分开的线程里并经由回调返回结果给Activity。
同样的，CacheProvider包含了些方法用SharedPreference或者SQLite数据库，检索和存储数据。它也通过回调把结果返回给Activity。&lt;/p&gt;

&lt;h3&gt;问题集&lt;/h3&gt;

&lt;p&gt;这个途径最主要的问题是视图层负责的东西太多。想象一个的常用的方案，一个应用必须去加载一串博客文章，用SQLite数据库缓存他们并最终在ListView上展示他们。Activity会做以下的事情。&lt;/p&gt;

&lt;p&gt;1.在APIProvider里调用loadPosts方法(回调)。&lt;/p&gt;

&lt;p&gt;2.等待APIProvider回调成功然后在CacheProvider里调用savePosts(回调)。&lt;/p&gt;

&lt;p&gt;3.等待CacheProvider回调成功然后在ListView上展示文章。&lt;/p&gt;

&lt;p&gt;4.分别处理从APIProvider和CacheProvider这两个可能的错误回调。&lt;/p&gt;

&lt;p&gt;这是个非常简单的例子。在实际的案例方案里REST API可能不会返回视图需要的数据。因为Activity将需要以某种方法在展示前转换或过滤数据。另一个常用的案例是当loadPosts()方法带上一个需要从其他地方获取的参数时，比如SDK服务提供的一个邮件地址。SDK貌似会以异步回调方式返回邮件地址，这意味着我们现在有3层嵌套回调。如果我们继续增加复杂度，众所周知这个途径的结果是将会变成回调的地狱。&lt;/p&gt;

&lt;h3&gt;小结&lt;/h3&gt;

&lt;p&gt;1.Activity和Fragment会变得很大并且难以维护。&lt;/p&gt;

&lt;p&gt;2.太多的嵌套回调意味着程序是丑陋的并且难以理解，所以在更换和增加新的功能时会痛苦。&lt;/p&gt;

&lt;p&gt;3.单元测试变得有挑战性或者不太可能了，因为太多逻辑放在Activity和Fragment里，这样会导致单元测试会很费劲。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-355&quot; src=&quot;/assets/译安卓应用架构体系/3.png&quot; alt=&quot;48391BD3-BEAC-4E45-B6C4-17AA7B5B0428&quot; /&gt;
一个由RxJave驱动的新架构&lt;/p&gt;

&lt;p&gt;我们用前面的方法大概2年时间。在此期间，我们做了一些改进，稍微减轻前面描述的问题。
一直到2014年我们开始看RxJava。在尝试一些试验工程后，我们认识到它能最终解决嵌套回调的问题。如果你不熟悉反应式系统编你可以看这个介绍(https://gist.github.com/staltz/868e7e9bc2a7b8c1f754) 。简而言之，RxJava能让你通过异步流管理数据并且给你很多操作，你可以应用到数据流里去转换，过滤或者合并数据。
考虑到前些年痛苦的经验，我们开始考虑在新的app里采用怎样的架构。然后我们开始这样的做了。&lt;/p&gt;

&lt;h3&gt;RxJava驱动的架构体系&lt;/h3&gt;

&lt;p&gt;与第一个方法相似，这个架构也能被拆分成数据和视图层。数据层包括DataManager和一些工具。视图层由Android框架组件的形式例如Fragment，Activity，ViewGroup等。
工具类(图形的第三列)是非常特殊的责任，用简洁方式实现了他们。例如，大多数项目有访问REST API的工具，读取数据库数据或者与第三方SDK通信。不同的应用有不同数量的工具但大多数工具为如下：&lt;/p&gt;

&lt;p&gt;1.PreferencesHelper:用SharePreferences读取和保存数据&lt;/p&gt;

&lt;p&gt;2.DatabaseHelper：处理存取SQLite数据库&lt;/p&gt;

&lt;p&gt;3.Retrofit(https://github.com/square/retrofit) 服务：执行调用REST API。我们已经开始使用Retrofit代替Volley因为它提供对RxJava的支持。它也非常好用。&lt;/p&gt;

&lt;p&gt;工具类里面的大多数公有方法会返回RxJava的Observable。
DataManager是架构的大脑。它广泛使用RxJava操作去合并过滤转换数据并用工具类检索。DataManager的目的是去大量减少Activity和Fragment处理准备展示数据的工作，不再常需要任何转换。&lt;/p&gt;

&lt;p&gt;下面条目展示的是DataManager方法是怎样的。样例方法是如下工作的：
1.调用Retrofit服务从REST API加载一串博客文章。&lt;/p&gt;

&lt;p&gt;2.使用DatabaseHelper保存文章到本地数据库以达到缓存的目的。&lt;/p&gt;

&lt;p&gt;3.过滤今天写的博客文章因为这是视图层想要展示的东西。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;public Observable&amp;lt;Post&amp;gt; loadTodayPosts() {
        return mRetrofitService.loadPosts()
                .concatMap(new Func1&amp;lt;List&amp;lt;Post&amp;gt;, Observable&amp;lt;Post&amp;gt;&amp;gt;() {
                    @Override
                    public Observable&amp;lt;Post&amp;gt; call(List&amp;lt;Post&amp;gt; apiPosts) {
                        return mDatabaseHelper.savePosts(apiPosts);
                    }
                })
                .filter(new Func1&amp;lt;Post, Boolean&amp;gt;() {
                    @Override
                    public Boolean call(Post post) {
                        return isToday(post.date);
                    }
                });
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    if (/(iPhone|iPad|iPod|iOS|Android)/i.test(navigator.userAgent))
    { //移动端
        var cpro_id = &quot;u3471606&quot;;
        document.write(&quot;\&lt;script type=\&quot;text/javascript\&quot; src=\&quot;http://cpro.baidustatic.com/cpro/ui/cm.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
    else
    {
        /*700*200信息流*/
        var cpro_id = &quot;u3469788&quot;;
        document.write(&quot;\&lt;script type=\&quot;text\/javascript\&quot; src=\&quot;\/\/cpro.baidustatic.com\/cpro\/ui\/c.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
&lt;/script&gt; --&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
    /*700*200信息流*/
    var cpro_id = &quot;u3469788&quot;;
&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;//cpro.baidustatic.com/cpro/ui/c.js&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    /*文内嵌入*/
    var cpro_id = &quot;u3471606&quot;;
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://cpro.baidustatic.com/cpro/ui/cm.js&quot;&gt;&lt;/script&gt; --&gt;

&lt;p&gt;视图中的组件像Activity或Fragment会简单调用这个方法并订阅返回的Observable。一旦订阅结束，用Observable得到的不同的文章能直接加入到适配器去展示在RecyclerView或者类似地方。&lt;/p&gt;

&lt;p&gt;文章最后一个元素是事件总线。事件总线允许我们广播那些发生在数据层上的事件，所以在视图层里的多种组件可以订阅这些事件。例如，在DataManager里的asignOut()方法可以推出一个事件当Observable完成时，然后在这个事件里被订阅的多种Activity就可以更换他们的UI来展示一个不在线的信号。&lt;/p&gt;

&lt;h3&gt;为什么这个方法更好&lt;/h3&gt;

&lt;p&gt;1.RxJava 的Observable和操作者去除了嵌套回调的需求。&lt;/p&gt;

&lt;p&gt;2.DataManager接管了以前视图部分的工作。因此它使得Activity和Fragment更加轻便。&lt;/p&gt;

&lt;p&gt;3.把Activity和Fragment的代码迁移到DataManager和工具类意味着单元测试变得更加容易。&lt;/p&gt;

&lt;p&gt;4.整理拆分责任并让DataManager作为与数据层通信的唯一途径，这样使得这个架构测试友好。工具类和DataManager可以被容易模仿。&lt;/p&gt;

&lt;h3&gt;我们仍然存在什么问题？&lt;/h3&gt;

&lt;p&gt;1.对于大型和复杂的项目来说DataManager会变得太臃肿并且难以维护。&lt;/p&gt;

&lt;p&gt;2.虽然视图层组件像Activity和Fragment变得更加轻便了，但他们仍然需要去处理相当部分围绕管理RxJava的订阅逻辑和错误分析等。&lt;/p&gt;

&lt;h3&gt;整合MVP(模型-视图-发言者)&lt;/h3&gt;

&lt;p&gt;在过去几年，一些架构模式像MVP或者MVVM在安卓社区曾获得流行。在一个样例工程和文章上探索这些模式后，我们发现MVP能带来很好的价值来改进我们现存的方法。因为我们现在架构被分成2个层级(视图和数据)，加上MVP后显得自然。我们仅仅需要加入一个新的发言者层级并把视图层的代码迁移到发言者层上就可以。&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone size-full wp-image-355&quot; src=&quot;/assets/译安卓应用架构体系/4.png&quot; alt=&quot;48391BD3-BEAC-4E45-B6C4-17AA7B5B0428&quot; /&gt;
MVP为基础的架构&lt;/p&gt;

&lt;p&gt;数据层保留下来但现在叫模型层了为了与模式的名字更加匹配。&lt;/p&gt;

&lt;p&gt;发言者是负责从模型层加载数据然后调用视图层的指定方法当结果准备好的时候。他们用DataManger订阅了Observable的返回。因为他们要去处理一些事情像调度程序和订阅一样。另外，他们可能分析错误代码或者应用特殊的操作在数据流上如果需要的话。例如，如果我们需要过滤一些数据并且这个过滤器不想被在其他地方重复使用，这样在发言者里实现比在DataManager里实现更有意义。&lt;/p&gt;

&lt;p&gt;下面你可以看到一个公有的方法在发言者里是怎样的。这个代码用thedataManager.loadTodayPosts() 方法订阅了Observable返回，它被定义在前面提到的部分。&lt;/p&gt;

&lt;p&gt;MvpView是视图组件而发言者是协助的。通常MVP视图是Activity，Fragment或者ViewGroup的实例。
如以前的架构，视图层包含标准框架组件例如ViewGroup，Fragment或Activity。主要的区别是这些组件不直接订阅Observable。他们用实现MvpView接口替代并提供一串简洁的方法例如showError()或者showProgressIndicator()。这视图的组件同样负责处理用户交互例如点击事件和行为通过在发言者里调用指定的方法。例如，我们有一个按钮加载一串文章，我们的Activity会从onClick监听者中调用presenter.loadTodayPosts()。&lt;/p&gt;

&lt;p&gt;如果你想了解一整个MVP为基础架构的工作样例，你可以渐出我们的Android Boilerplatex(https://github.com/ribot/android-boilerplate)项目在Github上，你也可以在ribot的指南(https://github.com/ribot/android-guidelines/blob/master/architecture&lt;em&gt;guidelines/android&lt;/em&gt;architecture.md)上了解更多。&lt;/p&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    if (/(iPhone|iPad|iPod|iOS|Android)/i.test(navigator.userAgent))
    { //移动端
        var cpro_id = &quot;u3471606&quot;;
        document.write(&quot;\&lt;script type=\&quot;text/javascript\&quot; src=\&quot;http://cpro.baidustatic.com/cpro/ui/cm.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
    else
    {
        /*700*200信息流*/
        var cpro_id = &quot;u3469788&quot;;
        document.write(&quot;\&lt;script type=\&quot;text\/javascript\&quot; src=\&quot;\/\/cpro.baidustatic.com\/cpro\/ui\/c.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
&lt;/script&gt; --&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
    /*700*200信息流*/
    var cpro_id = &quot;u3469788&quot;;
&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;//cpro.baidustatic.com/cpro/ui/c.js&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    /*文内嵌入*/
    var cpro_id = &quot;u3471606&quot;;
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://cpro.baidustatic.com/cpro/ui/cm.js&quot;&gt;&lt;/script&gt; --&gt;

&lt;h3&gt;为什么这个方法更好？&lt;/h3&gt;

&lt;p&gt;1.Activity和Fragment变得很轻便。他们的责任只有装配和更新UI并且处理用户事件。因此他们变得很容易去维护。&lt;/p&gt;

&lt;p&gt;2.现在我们能容易的通过模仿视图层为发言者写单元测试。之前，这个程序是视图层的一部分所以我们不能对它单元测试。整个架构变得非常测试友好。&lt;/p&gt;

&lt;p&gt;3.如果DataManager开始变得臃肿，我们能通过迁移代码到发言者上来减缓这个问题。&lt;/p&gt;

&lt;h3&gt;我们任然存在的问题是什么？&lt;/h3&gt;

&lt;p&gt;当有一个单例DataManager仍然有一个问题当底层变得很大很复杂的时候。我们还没有达到这个真正问题点，但我们意识到他可能会发生。&lt;/p&gt;

&lt;p&gt;重点提下这个不是完美的架构。实际上，认为世界上有一个唯一并且完美的架构能永远解决你所有的问题是很幼稚天真的。安卓社区会持续快速发展，我们需要保持探索，阅读和尝试，这样我们可以找到一个更好的方式去继续构建优秀的安卓应用。
希望你喜欢这篇文章并且能对你有用。如果这真是这样的话，不要忘了点击推荐按钮。也欢迎能听到你自己对这些方法的想法。&lt;/p&gt;

&lt;p&gt;翻译自:&lt;a href=&quot;https://medium.com/ribot-labs/android-application-architecture-8b6e34acda65#.1qvkq2xaa&quot;&gt;https://medium.com/ribot-labs/android-application-architecture-8b6e34acda65#.1qvkq2xaa&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;原文作者: Ivan&lt;/p&gt;

&lt;p&gt;作者授权邮件：
&lt;img class=&quot;alignnone size-full wp-image-355&quot; src=&quot;/assets/译安卓应用架构体系/5.png&quot; alt=&quot;48391BD3-BEAC-4E45-B6C4-17AA7B5B0428&quot; /&gt;&lt;/p&gt;

&lt;p&gt;申明此篇文章为本人参加GAD翻译比赛文章&lt;/p&gt;

&lt;p&gt;转载请注明出处: http://www.luzexi.com&lt;/p&gt;
</description>
               <pubDate>Fri, 15 Jan 2016 00:00:00 +0800</pubDate>
               <link>http://www.luzexi.com//%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2016/01/15/%E8%AF%91%E5%AE%89%E5%8D%93%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84%E4%BD%93%E7%B3%BB.html</link>
               <guid isPermaLink="true">http://www.luzexi.com//%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2016/01/15/%E8%AF%91%E5%AE%89%E5%8D%93%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84%E4%BD%93%E7%B3%BB.html</guid>
            </item>
        
            <item>
               <title>译Unity3d 综合性能窍门</title>
               <description>&lt;p&gt;很久没写博文，抱歉让大家失望了，最近忙于学习新的东西，也有懒惰的成分。现在开始我打算用英文来写我的博文，不为了什么，只是自己的英文太差，想练习练习。最近开始翻译一些自己觉得好的文章，其实这篇文章，很早就有人翻译了，因为比较好，我又为自己翻译了一遍。&lt;/p&gt;

&lt;p&gt;Hi everyone, long time no see. these days i&amp;#39;m busy to learn something else not about technology but life, maybe it&amp;#39;s just a excuse that i didnt write anymore :) from now on i&amp;#39;d like to write in english, just practice my poor english :( recently i maybe translate some article which is usefully for you guys maybe translated before by other people.&lt;/p&gt;

&lt;h3&gt;下面的内容并不一定很详细，但能够引导unity3d开发者如何制作性能流畅的游戏应用&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;内容：
1.官方提示文档
2.性能优化概述
3.模型网格
4.灯光
5.贴图
6.音频
7.物理碰撞
8.Shader
9.脚本
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;===&lt;/p&gt;

&lt;h3&gt;官方提示文档&lt;/h3&gt;

&lt;p&gt;图形性能优(http://docs.unity3d.com/Documentation/Manual/OptimizingGraphicsPerformance.html)
如何减少包大小(http://docs.unity3d.com/Documentation/Manual/ReducingFilesize.html)
角色动画(技巧比较零散) ( http://unity3d.com/Documentation/Manual/Character-Animation.html)&lt;/p&gt;

&lt;h3&gt;优化技巧概述&lt;/h3&gt;

&lt;p&gt;分析第一步，不要试图花时间去优化一些模糊不清的程序或者降低图片的大小除非你确实知道他们是瓶颈。首要的是去一直分析你的游戏找到瓶颈在哪里。Apple的Shark是一个分析OpenGL基础应用不错的工具。
分析第二步，不要忘了在优化后对游戏再分析一次以便查看他们是否有效，同时你也有可能会发现另一些瓶颈。&lt;/p&gt;

&lt;p&gt;开发工作第一 – 性能优化第二。尽可能花时间使你的游戏更加平滑顺畅。能够使得更改和更新游戏变得更快也将让减轻以后的性能转变。 在观察屏中测试场景，他将告诉你性能是被在场景中的物体拖慢速度还是被绑定在物体上的脚本拖慢速度。如果是观察屏中迟钝缓慢，你可能需要优化一下模型或者贴图，如果不是，瓶颈可能在程序中或者物理碰撞上。关闭个别的游戏物体，在编辑器里，试图关掉一些个别的物体，这样通常能排查到拖慢游戏的物体。&lt;/p&gt;

&lt;h3&gt;模型网格&lt;/h3&gt;

&lt;p&gt;尽可能的将邻近的模型合并为单个模型单个材质球。例如，如果你的场景里的桌子上堆叠有很多个物体，合并这些物体将会很有意义(有可能会需要将一些贴图合并一张大的贴图图集)。减少Unity渲染的物体的数量能显著促进性能。
一个材质球一个模型，每个材质球都会被视为分开的模型渲染。
使用极致低模的模型(500个多边形以下)会使得性能增加。大多数的显卡都有转换和照明功能，这意味他们每秒都处理一些奇怪的多边形。加之通常会提交一个网格让显卡渲染，所以太过于减少模型的多边形可能使你的游戏模型看起来像块状。
开始吧，用大约1500-2000的三角形做角色，这个数字可以变化大些，但是作为一个首发的美术人员应该在一个细节层级上对质量和性能有一个比较好的妥协。注意，如果你有模型使用四边形，(四边形)Unity将会把每个四边形都转换成2个三角形再导入。&lt;/p&gt;

&lt;h3&gt;光照&lt;/h3&gt;

&lt;p&gt;每个像素光渲染都会生效另外的渲染管道。像素光会使你的游戏看起来更好但不要太过于热衷于他们。然而，使用Quality Manager去调整像素光的渲染在每个质量等级上是一个很好的方式，这在你发布的游戏里提供了性能与质量的平衡性。
 聚光灯比点光源和方向光更加费性能。光照一个场景最好的方式是先确定你想要的效果，然后去看所有的灯光中哪个是重要的哪个可以削减掉使得场景效果与你想要的相似。
点光源和聚光灯值影响在他们范围内的模型网格。如果模型在点光源和聚光灯范围以外，光的影响将被削弱，模型将不会被灯光影响从而节省性能消耗。这个方式可以在理论上解释拥有很多小的点光源却任然拥有好的性能表现，因为他们只影响一小部分的物体。记住，一个模型最多只能被8个光源所影响。&lt;/p&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    if (/(iPhone|iPad|iPod|iOS|Android)/i.test(navigator.userAgent))
    { //移动端
        var cpro_id = &quot;u3471606&quot;;
        document.write(&quot;\&lt;script type=\&quot;text/javascript\&quot; src=\&quot;http://cpro.baidustatic.com/cpro/ui/cm.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
    else
    {
        /*700*200信息流*/
        var cpro_id = &quot;u3469788&quot;;
        document.write(&quot;\&lt;script type=\&quot;text\/javascript\&quot; src=\&quot;\/\/cpro.baidustatic.com\/cpro\/ui\/c.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
&lt;/script&gt; --&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
    /*700*200信息流*/
    var cpro_id = &quot;u3469788&quot;;
&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;//cpro.baidustatic.com/cpro/ui/c.js&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    /*文内嵌入*/
    var cpro_id = &quot;u3471606&quot;;
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://cpro.baidustatic.com/cpro/ui/cm.js&quot;&gt;&lt;/script&gt; --&gt;

&lt;h3&gt;贴图&lt;/h3&gt;

&lt;p&gt;在看起来可以接受的情况下尽量缩小贴图的大小。如果你的显卡没有拥有足够的内存来存放这些贴图时，他们将被放置在系统内存里，当他们需要被渲染时再被上传。这在新的电脑上没什么问题因为他们有很多可以使用的空间。但如果你执着于完全能在低端显存设备上运行你的游戏的话，不需要在图片工具上改变贴图的大小，你可以使用Unity导入图片并对其设置大小。
不要使用低品质的图片文件，试图使用jpeg的低品质文件或者低色彩png或者gif文件也不会降低游戏中的大小。Unity会在打包发布时自动压缩所有图片，所以请保持原始的高品质贴图文件。这是由于多种压缩和解压缩对品质最小化变得很轻便。&lt;/p&gt;

&lt;h3&gt;音频&lt;/h3&gt;

&lt;p&gt;使用.ogg对音频压缩，其他的音频格式在发布打包时将被作为非压缩的PCM音频格式存储在包内。
对小的音效使用非压缩音频，Unity(从1.6开始)导入时会解压缩所有ogg文件。它让短音效播放时使用非压缩的wav或者aiff文件，这样可以不消耗CPU在解压音频文件上。例如那些急速开枪、脚步等类似的声音。&lt;/p&gt;

&lt;h3&gt;物理&lt;/h3&gt;

&lt;p&gt;每个rigidbody都消耗计算，所以越少越理想。已有的Rigidbody物体同样最好关闭起来当他们的旋转速度和移动速度到减少到一定程度的时候。当这个发生的时候，大量计算被显著去除并保持比较低的量，直到他们受到手动受力或者碰撞其他的碰撞体如果存在的话。
复杂的碰撞比普通的消耗更多的计算量，大量堆叠在一起的球形rigidbody碰撞体在地形上会比相隔较远的消耗更多的复杂计算过程。&lt;/p&gt;

&lt;h3&gt;着色器&lt;/h3&gt;

&lt;p&gt;很多复杂的着色器比简单的可能消耗性能。VertexLit Diffuse 着色器应该是带贴图和光照最快的着色器了。然而，如果没有像素灯光在场景里或者所有像素光都被Quality Manager关掉了，那么大多数着色器将回退到更加简单的顶点渲染版本。&lt;/p&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    if (/(iPhone|iPad|iPod|iOS|Android)/i.test(navigator.userAgent))
    { //移动端
        var cpro_id = &quot;u3471606&quot;;
        document.write(&quot;\&lt;script type=\&quot;text/javascript\&quot; src=\&quot;http://cpro.baidustatic.com/cpro/ui/cm.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
    else
    {
        /*700*200信息流*/
        var cpro_id = &quot;u3469788&quot;;
        document.write(&quot;\&lt;script type=\&quot;text\/javascript\&quot; src=\&quot;\/\/cpro.baidustatic.com\/cpro\/ui\/c.js\&quot;\&gt;\&lt;\/script\&gt;&quot;);
    }
&lt;/script&gt; --&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
    /*700*200信息流*/
    var cpro_id = &quot;u3469788&quot;;
&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;//cpro.baidustatic.com/cpro/ui/c.js&quot;&gt;&lt;/script&gt;

&lt;!-- &lt;script type=&quot;text/javascript&quot;&gt;
    /*文内嵌入*/
    var cpro_id = &quot;u3471606&quot;;
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;http://cpro.baidustatic.com/cpro/ui/cm.js&quot;&gt;&lt;/script&gt; --&gt;

&lt;h3&gt;脚本&lt;/h3&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&lt;span&gt;&lt;/span&gt;1.你是否使用了好的算法？选择一个好的算法对工作收益来说比其他的调整会有更好的优化效果如果可能的话。
注意最好的算法不总是那个最低平均复杂度的算法。对于小数据量来说，通常使用一个简单的低速算法比智能却带高初始化的算法要来的好。(例如可以用hash表或二叉树作为以名字存取的大型数据，但你可以使用一个简单链表和线性算法如果你存取小型数据的话。虽然dotnet的哈希表类在这种情况下已经选择了最佳的方式根据你的数据量大小。)

2.FixedUpdate方法里尽可能保持少的逻辑。这些逻辑可以被调用大约50-100次每秒在每个有效脚本的每个物体里，所以他们是优化的重要目标。如果某些逻辑确实需要在渲染更新后执行再把这些代码放进update方法里去。
尽可能把一些物体上的脚本关掉当不再需要他们的时候。如果你的游戏有一个大型的场景，里面的怪物在几公里远的地方，你可以关掉他的AI脚本直到摄像头靠近他们时再开启。这里有个好方法去开关它们，就是使用gameObject.SetActiveRecursively(false)并且设置球形和方形碰撞体为触发器(trigger)。

3.小心空的Update方法。当使用资源菜单创建新的脚本时他们包含了空的Update方法。去掉它如果你不需要它的话，因为它会带来一些(少量的)性能消耗。这个性能消耗点应用所有在MonoBehaviour脚本里的重载方法，以Update和FixedUpdate为主要的目标。

4.关于一个GameObject中最合逻辑的组件，某人可以理论上这样写: someGameObject.transform.gameObject.rigidbody.transform.gameObject.rigidbody.transform，但这个有大部分都是不需要的。如果你需要去处理一个物体的Transform，可以映射它到你的脚本里的开头部分。

5.协程是你的好朋友。协程只有很少的开销并更适合被选择，而一个update方法在他们不需要的时候也总是被调用。例如，你有一个脚本去实现一个命令触发的渐进渐出的灯光效果，你可以用协程去实现渐进渐出替换Update。这样做在大部分时候当灯光不进行渐进渐出时，脚本是最低的性能消耗。如果渐进渐出在Update方法里实现，你将低效的轮询去查看是否渐进渐出结束了。

6.在没有必要的情况下不要用方法去搜索物体，这包括方法GameObject.FindByTag() 和 GameObject.GetComponent()，与所有便利的属性(transform,light,等)一样，这些方法可以被优化的运行起来地尽可能的快，但他们仍然必须去通过搜索关联的物体去找到你想要的那个。最重要的事是避免调用搜索方法在Update和FixedUpdate方法里，于之替换的是调用某方法一次并存储它在你的类成员变量里，然后在你下次需要它时从这个成员变量里取得。

7.不要使用SendMessage(或类似的方法)当你不是必要的时候，SendMessage比直接调用方法慢至少100倍，并且这个倍数还会增加当很多脚本和方法在物体上生效时。如果你能得到你的脚本你最好尽早去找，同样的直接调用这个方法。

8.JavaScripts(和Boos)的duck类型会消耗已少量的计算量。在性能零界区域和在使用javascript时，请直接尝试声明你使用的变量类型。(尽管这个通常计算机会自动识别那个有效的你所指定的类型，所以你的程序可以多样化)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;翻译自：http://wiki.unity3d.com/index.php?title=General&lt;em&gt;Performance&lt;/em&gt;Tips&lt;/p&gt;

&lt;p&gt;申明此篇文章为本人参加GAD翻译比赛文章&lt;/p&gt;

&lt;p&gt;转载请注明出处: http://www.luzexi.com&lt;/p&gt;
</description>
               <pubDate>Fri, 08 Jan 2016 00:00:00 +0800</pubDate>
               <link>http://www.luzexi.com//unity3d/%E6%B8%B8%E6%88%8F%E9%80%9A%E7%94%A8%E6%A8%A1%E5%9D%97/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2016/01/08/%E8%AF%91Unity3d%E7%BB%BC%E5%90%88%E6%80%A7%E8%83%BD%E7%AA%8D%E9%97%A8.html</link>
               <guid isPermaLink="true">http://www.luzexi.com//unity3d/%E6%B8%B8%E6%88%8F%E9%80%9A%E7%94%A8%E6%A8%A1%E5%9D%97/%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF/2016/01/08/%E8%AF%91Unity3d%E7%BB%BC%E5%90%88%E6%80%A7%E8%83%BD%E7%AA%8D%E9%97%A8.html</guid>
            </item>
        
    </channel>
</rss>